package be.bugbounty.backend.service;

import be.bugbounty.backend.dto.admin.VulnerabilityTypeRequestDTO;
import be.bugbounty.backend.model.VulnerabilityType;
import be.bugbounty.backend.repository.VulnerabilityTypeRepository;
import org.springframework.dao.DataIntegrityViolationException;
import org.springframework.stereotype.Service;

import java.util.List;

@Service
public class VulnerabilityService {

    private final VulnerabilityTypeRepository repo;

    public VulnerabilityService(VulnerabilityTypeRepository repo) {
        this.repo = repo;
    }

    public List<VulnerabilityType> findAll() {
        return repo.findAll();
    }

    public VulnerabilityType create(VulnerabilityTypeRequestDTO dto) {
        try {
            VulnerabilityType v = new VulnerabilityType();
            v.setName(dto.getName().trim());
            return repo.save(v);
        } catch (DataIntegrityViolationException e) {
            throw new IllegalArgumentException("Ce nom existe déjà.");
        }
    }

    public VulnerabilityType update(Long id, VulnerabilityTypeRequestDTO dto) {
        VulnerabilityType v = repo.findById(id)
                .orElseThrow(() -> new RuntimeException("Type de vulnérabilité introuvable"));
        v.setName(dto.getName().trim());
        try {
            return repo.save(v);
        } catch (DataIntegrityViolationException e) {
            throw new IllegalArgumentException("Ce nom existe déjà.");
        }
    }

    public void delete(Long id) {
        repo.deleteById(id);
    }
}
