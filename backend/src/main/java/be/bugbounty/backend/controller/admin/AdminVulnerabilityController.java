package be.bugbounty.backend.controller.admin;

import be.bugbounty.backend.model.VulnerabilityType;
import be.bugbounty.backend.service.VulnerabilityService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.web.bind.annotation.*;

import java.util.List;

@RestController
@RequestMapping("/api/admin/vulnerabilities")
@PreAuthorize("hasRole('ADMIN')")
public class AdminVulnerabilityController {

    @Autowired
    private VulnerabilityService vulnerabilityService;

    @GetMapping
    public ResponseEntity<List<VulnerabilityType>> getAll() {
        return ResponseEntity.ok(vulnerabilityService.findAll());
    }

    @PostMapping
    public ResponseEntity<?> create(@RequestBody VulnerabilityType vuln) {
        try {
            return ResponseEntity.ok(vulnerabilityService.create(vuln));
        } catch (Exception e) {
            return ResponseEntity.badRequest().body(e.getMessage());
        }
    }

    @PatchMapping("/{id}")
    public ResponseEntity<?> update(@PathVariable Long id, @RequestBody VulnerabilityType vuln) {
        try {
            return ResponseEntity.ok(vulnerabilityService.update(id, vuln));
        } catch (Exception e) {
            return ResponseEntity.badRequest().body(e.getMessage());
        }
    }

    @DeleteMapping("/{id}")
    public ResponseEntity<?> delete(@PathVariable Long id) {
        try {
            vulnerabilityService.delete(id);
            return ResponseEntity.ok().build();
        } catch (Exception e) {
            return ResponseEntity.badRequest().body(e.getMessage());
        }
    }
}
